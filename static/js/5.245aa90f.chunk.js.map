{"version":3,"sources":["components/Header/Header.jsx","components/Header/Header.module.css","components/ContactFilter/ContactFilter.module.css","components/LoginForm/LoginForm.jsx","views/LoginView/LoginView.jsx"],"names":["Header","logoutButton","dispatch","useDispatch","userEmail","useSelector","authSelectors","className","css","header","timeout","classNames","appear","in","title","type","onClick","authOperations","module","exports","LoginForm","useState","email","password","user","setUser","error","useEffect","Notiflix","Notify","failure","onSubmit","event","preventDefault","label","input","name","required","pattern","value","placeholder","onChange","target","minLength","LoginView","to"],"mappings":"kJAAA,sEAuCeA,IA9Bf,YAA2C,IAAD,IAAxBC,oBAAwB,SAClCC,EAAWC,cACXC,EAAYC,YAAYC,KAM9B,OACE,yBAAQC,UAAWC,IAAIC,OAAvB,UACE,cAAC,IAAD,CACEC,QAAS,IACTC,WAAW,YACXC,QAAQ,EACRC,IAAI,EAJN,SAME,oBAAIN,UAAWC,IAAIM,MAAnB,yBAEDb,GACC,gCACE,qBAAIM,UAAWC,IAAIM,MAAnB,oBAAkCV,KAClC,wBAAQW,KAAK,SAASC,QAjBH,WACzBd,EAASe,QAgBH,6B,0CC7BVC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,oBCA1DD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,+B,4KCuEhDC,MAjEf,WACE,MAAwBC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAKMvB,EAAWC,cACXuB,EAAQrB,YAAYC,KAuB1B,OArBAqB,qBAAU,WACJD,GACFE,IAASC,OAAOC,QAAQ,6BAEzB,CAACJ,IAkBF,uBAAMK,SATR,SAAsBC,GACpBA,EAAMC,iBAEN/B,EACEe,IAAqB,CAAEK,MAAOE,EAAKF,MAAOC,SAAUC,EAAKD,aAK3D,UACE,wBAAOhB,UAAWC,IAAI0B,MAAtB,kBAEE,uBACE3B,UAAWC,IAAI2B,MACfpB,KAAK,QACLqB,KAAK,QACLC,UAAQ,EACRvB,MAAM,gDACNwB,QAAQ,2CACRC,MAAOf,EAAKF,MACZkB,YAAY,QACZC,SA5BR,SAA0BT,GACxBP,EAAQ,2BAAKD,GAAN,IAAYF,MAAOU,EAAMU,OAAOH,eA8BrC,wBAAOhC,UAAWC,IAAI0B,MAAtB,qBAEE,uBACE3B,UAAWC,IAAI2B,MACfpB,KAAK,WACLqB,KAAK,WACLC,UAAQ,EACRvB,MAAM,2DACNyB,MAAOf,EAAKD,SACZoB,UAAU,IACVH,YAAY,WACZC,SAvCR,SAA6BT,GAC3BP,EAAQ,2BAAKD,GAAN,IAAYD,SAAUS,EAAMU,OAAOH,eAyCxC,wBAAQxB,KAAK,SAAb,wB,OCjDS6B,UAZf,WACE,OACE,qCACE,cAAC5C,EAAA,EAAD,IACA,yCACA,cAAC,EAAD,IACA,6FAJF,IAIqD,uBAClD,cAAC,IAAD,CAAM6C,GAAG,YAAT","file":"static/js/5.245aa90f.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport * as authOperations from 'redux/auth/auth-operations';\r\nimport * as authSelectors from 'redux/auth/auth-selectors';\r\n\r\nimport 'components/Header/animation.css';\r\nimport css from 'components/Header/Header.module.css';\r\n\r\nfunction Header({ logoutButton = false }) {\r\n  const dispatch = useDispatch();\r\n  const userEmail = useSelector(authSelectors.getUserEmail);\r\n\r\n  const handleLogoutButton = () => {\r\n    dispatch(authOperations.logout());\r\n  };\r\n\r\n  return (\r\n    <header className={css.header}>\r\n      <CSSTransition\r\n        timeout={500}\r\n        classNames=\"animation\"\r\n        appear={true}\r\n        in={true}\r\n      >\r\n        <h1 className={css.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n      {logoutButton && (\r\n        <div>\r\n          <h3 className={css.title}>Hello, {userEmail}</h3>\r\n          <button type=\"button\" onClick={handleLogoutButton}>\r\n            Log out\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2_xBj\",\"title\":\"Header_title__2BQ0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__1eocN\",\"input\":\"ContactFilter_input__BxPAK\"};","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as authOperations from 'redux/auth/auth-operations';\r\nimport * as authSelectors from 'redux/auth/auth-selectors';\r\nimport Notiflix from 'notiflix';\r\nimport css from 'components/ContactFilter/ContactFilter.module.css';\r\n\r\nfunction LoginForm() {\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(authSelectors.getError);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      Notiflix.Notify.failure('Wrong email or password');\r\n    }\r\n  }, [error]);\r\n\r\n  function handleEmailInput(event) {\r\n    setUser({ ...user, email: event.target.value });\r\n  }\r\n  function handlePasswordInput(event) {\r\n    setUser({ ...user, password: event.target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    dispatch(\r\n      authOperations.login({ email: user.email, password: user.password }),\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className={css.label}>\r\n        Email\r\n        <input\r\n          className={css.input}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required\r\n          title=\"Place for your email. @ symbol is necessarily\"\r\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n          value={user.email}\r\n          placeholder=\"Email\"\r\n          onChange={handleEmailInput}\r\n        />\r\n      </label>\r\n      <label className={css.label}>\r\n        Password\r\n        <input\r\n          className={css.input}\r\n          type=\"password\"\r\n          name=\"password\"\r\n          required\r\n          title=\"Place here your password. You need at least 6 characters\"\r\n          value={user.password}\r\n          minLength=\"6\"\r\n          placeholder=\"Password\"\r\n          onChange={handlePasswordInput}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Log in</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Link } from 'react-router-dom';\r\nimport Header from 'components/Header/Header';\r\nimport LoginForm from 'components/LoginForm/LoginForm';\r\n\r\nimport 'views/LoginView/LoginView.module.css';\r\n\r\nfunction LoginView() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <h2>Log in:</h2>\r\n      <LoginForm />\r\n      <span>ðŸ — If you want to register account ðŸ —</span> <br />\r\n      {<Link to=\"/register\">Registration form</Link>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginView;\r\n"],"sourceRoot":""}