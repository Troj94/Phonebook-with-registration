{"version":3,"sources":["components/Header/Header.jsx","components/Header/Header.module.css","components/ContactFilter/ContactFilter.module.css","components/RegistrationForm/RegistrationForm.jsx","views/RegistrationView/RegistrationView.jsx"],"names":["Header","logoutButton","dispatch","useDispatch","userEmail","useSelector","authSelectors","className","css","header","timeout","classNames","appear","in","title","type","onClick","authOperations","module","exports","RegistrationForm","useState","name","email","password","confirmPassword","user","setUser","userName","event","a","preventDefault","Notiflix","Notify","failure","newUser","useEffect","success","onSubmit","label","input","required","pattern","placeholder","value","onChange","target","minLength","RegistrationView","to"],"mappings":"gJAAA,sEAuCeA,IA9Bf,YAA2C,IAAD,IAAxBC,oBAAwB,SAClCC,EAAWC,cACXC,EAAYC,YAAYC,KAM9B,OACE,yBAAQC,UAAWC,IAAIC,OAAvB,UACE,cAAC,IAAD,CACEC,QAAS,IACTC,WAAW,YACXC,QAAQ,EACRC,IAAI,EAJN,SAME,oBAAIN,UAAWC,IAAIM,MAAnB,yBAEDb,GACC,gCACE,qBAAIM,UAAWC,IAAIM,MAAnB,oBAAkCV,KAClC,wBAAQW,KAAK,SAASC,QAjBH,WACzBd,EAASe,QAgBH,6B,0CC7BVC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,oBCA1DD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,+B,oMC+GhDC,MAzGf,WACE,MAAwBC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,KAJnB,mBAAOC,EAAP,KAAaC,EAAb,KAgBMzB,EAAWC,cACXyB,EAAWvB,YAAYC,KAlBH,4CAoB1B,WAA4BuB,GAA5B,eAAAC,EAAA,yDACED,EAAME,iBAEFL,EAAKF,WAAaE,EAAKD,gBAH7B,uBAIIO,IAASC,OAAOC,QAAQ,yBAJ5B,0BAOQC,EAAU,CACdb,KAAMI,EAAKJ,KACXC,MAAOG,EAAKH,MACZC,SAAUE,EAAKF,UAEjBtB,EAASe,IAA4BkB,IAZvC,4CApB0B,sBAwC1B,OALAC,qBAAU,WACHR,GACLI,IAASC,OAAOI,QAAQ,oCACvB,CAACT,IAGF,mCACE,uBAAMU,SA1CgB,4CA0CtB,UACE,wBAAO/B,UAAWC,IAAI+B,MAAtB,iBAEE,uBACEhC,UAAWC,IAAIgC,MACfzB,KAAK,OACLO,KAAK,OACLmB,UAAQ,EACR3B,MAAM,kcACN4B,QAAQ,yHACRC,YAAY,OACZC,MAAOlB,EAAKJ,KACZuB,SA9Cc,SAAAhB,GAAK,OAC3BF,EAAQ,2BAAKD,GAAN,IAAYJ,KAAMO,EAAMiB,OAAOF,eAgDlC,wBAAOrC,UAAWC,IAAI+B,MAAtB,kBAEE,uBACEhC,UAAWC,IAAIgC,MACfzB,KAAK,QACLO,KAAK,QACLmB,UAAQ,EACR3B,MAAM,gDACN4B,QAAQ,2CACRC,YAAY,QACZC,MAAOlB,EAAKH,MACZsB,SA1De,SAAAhB,GAAK,OAC5BF,EAAQ,2BAAKD,GAAN,IAAYH,MAAOM,EAAMiB,OAAOF,eA4DnC,wBAAOrC,UAAWC,IAAI+B,MAAtB,qBAEE,uBACEhC,UAAWC,IAAIgC,MACfzB,KAAK,WACLO,KAAK,WACLmB,UAAQ,EACR3B,MAAM,2DACNiC,UAAU,IACVJ,YAAY,WACZC,MAAOlB,EAAKF,SACZqB,SAtEkB,SAAAhB,GAAK,OAC/BF,EAAQ,2BAAKD,GAAN,IAAYF,SAAUK,EAAMiB,OAAOF,eAwEtC,wBAAOrC,UAAWC,IAAI+B,MAAtB,6BAEE,uBACEhC,UAAWC,IAAIgC,MACfzB,KAAK,WACLO,KAAK,kBACLmB,UAAQ,EACR3B,MAAM,yCACNiC,UAAU,IACVJ,YAAY,WACZC,MAAOlB,EAAKD,gBACZoB,SAlFyB,SAAAhB,GAAK,OACtCF,EAAQ,2BAAKD,GAAN,IAAYD,gBAAiBI,EAAMiB,OAAOF,eAoF7C,wBAAQ7B,KAAK,SAAb,2B,OCzFOiC,UAZf,WACE,OACE,qCACE,cAAChD,EAAA,EAAD,IACA,iDACA,cAAC,EAAD,IACA,mFAJF,IAI2C,uBACxC,cAAC,IAAD,CAAMiD,GAAG,SAAT","file":"static/js/6.6a7cc8c0.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport * as authOperations from 'redux/auth/auth-operations';\nimport * as authSelectors from 'redux/auth/auth-selectors';\n\nimport 'components/Header/animation.css';\nimport css from 'components/Header/Header.module.css';\n\nfunction Header({ logoutButton = false }) {\n  const dispatch = useDispatch();\n  const userEmail = useSelector(authSelectors.getUserEmail);\n\n  const handleLogoutButton = () => {\n    dispatch(authOperations.logout());\n  };\n\n  return (\n    <header className={css.header}>\n      <CSSTransition\n        timeout={500}\n        classNames=\"animation\"\n        appear={true}\n        in={true}\n      >\n        <h1 className={css.title}>Phonebook</h1>\n      </CSSTransition>\n      {logoutButton && (\n        <div>\n          <h3 className={css.title}>Hello, {userEmail}</h3>\n          <button type=\"button\" onClick={handleLogoutButton}>\n            Log out\n          </button>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eB9sG\",\"title\":\"Header_title__15_1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2jId6\",\"input\":\"ContactFilter_input__2rYuU\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as authOperations from 'redux/auth/auth-operations';\nimport * as authSelectors from 'redux/auth/auth-selectors';\nimport Notiflix from 'notiflix';\nimport css from 'components/ContactFilter/ContactFilter.module.css';\n\nfunction RegistrationForm() {\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const handleNameInput = event =>\n    setUser({ ...user, name: event.target.value });\n  const handleEmailInput = event =>\n    setUser({ ...user, email: event.target.value });\n  const handlePasswordInput = event =>\n    setUser({ ...user, password: event.target.value });\n  const handleConfirmPasswordInput = event =>\n    setUser({ ...user, confirmPassword: event.target.value });\n\n  const dispatch = useDispatch();\n  const userName = useSelector(authSelectors.getUserName);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (user.password !== user.confirmPassword) {\n      Notiflix.Notify.failure('Password is not equal');\n      return;\n    }\n    const newUser = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n    };\n    dispatch(authOperations.registration(newUser));\n  }\n\n  useEffect(() => {\n    if (!userName) return;\n    Notiflix.Notify.success('You registration is successful');\n  }, [userName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            required\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Name\"\n            value={user.name}\n            onChange={handleNameInput}\n          />\n        </label>\n        <label className={css.label}>\n          Email\n          <input\n            className={css.input}\n            type=\"email\"\n            name=\"email\"\n            required\n            title=\"Place for your email. @ symbol is necessarily\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            placeholder=\"Email\"\n            value={user.email}\n            onChange={handleEmailInput}\n          />\n        </label>\n        <label className={css.label}>\n          Password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"password\"\n            required\n            title=\"Place here your password. You need at least 6 characters\"\n            minLength=\"6\"\n            placeholder=\"Password\"\n            value={user.password}\n            onChange={handlePasswordInput}\n          />\n        </label>\n        <label className={css.label}>\n          Confirm password\n          <input\n            className={css.input}\n            type=\"password\"\n            name=\"confirmPassword\"\n            required\n            title=\"Place here your password one more time\"\n            minLength=\"6\"\n            placeholder=\"Password\"\n            value={user.confirmPassword}\n            onChange={handleConfirmPasswordInput}\n          />\n        </label>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </>\n  );\n}\n\nexport default RegistrationForm;\n","import { Link } from 'react-router-dom';\nimport Header from 'components/Header/Header';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport 'views/LoginView/LoginView.module.css';\n\nfunction RegistrationView() {\n  return (\n    <>\n      <Header />\n      <h2>Create account:</h2>\n      <RegistrationForm />\n      <span>🠗 Already have account? 🠗</span> <br />\n      {<Link to=\"/login\">Log in</Link>}\n    </>\n  );\n}\n\nexport default RegistrationView;\n"],"sourceRoot":""}