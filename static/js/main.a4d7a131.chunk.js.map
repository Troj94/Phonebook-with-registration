{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactFilter/ContactFilter.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","redux/api.js","components/Loader/Loader.jsx","components/ContactForm/ContactForm.jsx","redux/reducer.js","components/ContactItem/ContactItem.jsx","components/Notification/Notification.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","addContact","mutation","url","method","body","name","number","invalidatesTags","deleteContact","id","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","Spinner","type","color","height","width","ContactForm","data","contacts","useState","setName","setNumber","loaderIsActive","setLoaderIsActive","useEffect","length","nameId","uuidv4","numberId","event","a","preventDefault","find","contact","toLowerCase","Notiflix","Notify","failure","finally","formChange","target","value","CSSTransition","timeout","classNames","appear","in","onSubmit","className","css","form","label","onChange","placeholder","pattern","title","required","input","button","init","filterSlice","createSlice","initialState","filter","reducers","changeFilter","state","actions","payload","phonebookFilter","reducer","getFilter","ContactItem","contactItem","onClick","Notification","message","ContactList","useSelector","filteredContacts","includes","contactList","map","Filter","filterValue","dispatch","useDispatch","inputId","e","App","ContactFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,8B,mBCA1ED,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,+B,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,gC,mBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,kMCCnBC,EAAeC,YAAU,CACpCC,YAAa,WACbC,UAAWC,YAAe,CACxBC,QAAS,yDAEXC,SAAU,CAAC,YACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,8BACPC,aAAc,CAAC,cAEjBC,WAAYJ,EAAQK,SAAS,CAC3BH,MAAO,kBAAuB,CAC5BI,IAAI,YACJC,OAAQ,OACRC,KAAM,CACJC,KAJG,EAAGA,KAKNC,OALG,EAASA,UAQhBC,gBAAiB,CAAC,cAEpBC,cAAeZ,EAAQK,SAAS,CAC9BH,MAAO,SAAAW,GAAE,MAAK,CACZP,IAAI,aAAD,OAAeO,GAClBN,OAAQ,WAEVI,gBAAiB,CAAC,kB,GASpBnB,EAHFsB,sBAGEtB,EAFFuB,sBAEEvB,EADFwB,yB,yECnCK,SAASC,IACd,OAAO,cAAC,IAAD,CAAQC,KAAK,YAAYC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KCyGtDC,MAlGf,WACE,MAAgC9B,EAAasB,wBAArCS,KAAMC,OAAd,MAAyB,GAAzB,EACA,EAAqBhC,EAAauB,wBAA3BX,EAAP,oBAEA,EAAwBqB,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOf,EAAP,KAAeiB,EAAf,KAEA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRJ,EAAQ,IACRC,EAAU,MACT,CAACH,EAASO,SAEb,IAAIlB,EAAK,CACPmB,OAAQC,cACRC,SAAUD,eAhBS,4CAmBrB,WAA0BE,GAA1B,SAAAC,EAAA,yDACED,EAAME,iBACNR,GAAkB,IAGhBL,EAASc,MACP,SAAAC,GAAO,OAAIA,EAAQ9B,KAAK+B,gBAAkB/B,EAAK+B,iBANrD,uBASIC,IAASC,OAAOC,QAAhB,UAA2BlC,EAA3B,4BACAoB,GAAkB,GAVtB,0BAaEzB,EAAW,CAAEK,OAAMC,WAAUkC,SAAQ,kBAAMf,GAAkB,MAb/D,4CAnBqB,sBAmCrB,SAASgB,EAAWV,GAClB,OAAQA,EAAMW,OAAOrC,MACnB,IAAK,OACH,OAAOiB,EAAQS,EAAMW,OAAOC,OAE9B,IAAK,SACH,OAAOpB,EAAUQ,EAAMW,OAAOC,OAEhC,QACE,QAIN,OACE,gCACE,cAACC,EAAA,EAAD,CACEC,QAAS,IACTC,WAAW,YACXC,QAAQ,EACRC,IAAI,EAJN,SAME,6CAEF,uBAAMC,SA1DW,4CA0DWC,UAAWC,IAAIC,KAA3C,UACE,wBAAOF,UAAWC,IAAIE,MAAtB,iBAEE,uBACE5C,GAAIA,EAAGmB,OACPe,MAAOtC,EACPiD,SAAUb,EACVc,YAAY,OACZzC,KAAK,OACLT,KAAK,OACLmD,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,UAAWC,IAAIQ,WAGnB,wBAAOT,UAAWC,IAAIE,MAAtB,mBAEE,uBACE5C,GAAIA,EAAGqB,SACPa,MAAOrC,EACPgD,SAAUb,EACVc,YAAY,SACZzC,KAAK,MACLT,KAAK,SACLmD,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,UAAWC,IAAIQ,WAGnB,wBAAQ7C,KAAK,SAASoC,UAAWC,IAAIS,OAArC,4BAIDpC,GAAkB,cAACX,EAAD,QAOzBwB,IAASC,OAAOuB,KAAK,CACnBhB,QAAS,O,kBC7GLiB,EAAcC,YAAY,CAC9B1D,KAAM,YACN2D,aAAc,CAAEC,OAAQ,IACxBC,SAAU,CACRC,aADQ,SACKC,EAAOC,GAClBD,EAAMH,OAASI,EAAQC,YAKhBC,EAAkBT,EAAYU,QAC5BL,EAAiBL,EAAYO,QAA7BF,aAEFM,EAAY,SAAAL,GAAK,OAAIA,EAAMG,gBAAgBN,Q,iBCUzCS,MArBf,YAA4C,IAArBjE,EAAoB,EAApBA,GAAIJ,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC/B,EAAwBlB,EAAawB,2BAA9BJ,EAAP,oBAEA,OACE,qBAAI0C,UAAWC,IAAIwB,YAAnB,UACE,iCAAOtE,EAAP,QACA,iCAAOC,EAAP,OACA,+BACE,wBACEQ,KAAK,SACL8D,QAAS,kBAAMpE,EAAcC,IAC7BA,GAAIA,EACJyC,UAAWC,IAAIS,OAJjB,wBAJiCnD,I,iBCLlC,SAASoE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,oBAAI5B,UAAWC,IAAI2B,QAAnB,SAA6BA,I,qBC8BvBC,MA3Bf,WACE,MAAgC3F,EAAasB,wBAArCS,KAAMC,OAAd,MAAyB,GAAzB,EAEM6C,EAASe,YAAYP,GAErBQ,EAAmB7D,EAAS6C,QAAO,qBAAG5D,KACrC+B,cAAc8C,SAASjB,EAAO7B,kBAGrC,OACE,mCACE,oBAAIc,UAAWC,IAAIgC,YAAnB,SAC+B,IAA5BF,EAAiBtD,OAChB,cAACkD,EAAD,CAAcC,QAAQ,wBAEtB,gCACE,2CACCG,EAAiBG,KAAI,gBAAG3E,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACpB,cAAC,EAAD,CAAsBG,GAAIA,EAAIJ,KAAMA,EAAMC,OAAQA,GAAhCG,c,iBCAjB4E,MApBf,WACE,IAAMC,EAAcN,YAAYP,GAC1Bc,EAAWC,cACXC,EAAU5D,cAEhB,OACE,wBAAOqB,UAAWC,IAAIE,MAAtB,iCAEE,uBACE5C,GAAIgF,EACJvC,UAAWC,IAAIQ,MACfF,MAAM,qLACNd,MAAO2C,EACPhC,SAAU,SAAAoC,GAAC,OAAIH,EAASpB,EAAauB,EAAEhD,OAAOC,SAC9CY,YAAY,a,MCHLoC,I,EAAAA,EAVf,WACE,OACE,sBAAKzC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC0C,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCIRQ,EAAQC,YAAe,CAC3B/B,SAAO,mBACJpF,EAAaE,YAAcF,EAAaoF,SADpC,gCAELD,GAFK,GAIPiC,UAAUC,EACVC,WAbiB,SAAAC,GAIjB,MAAM,GAAN,mBAAWA,KAAX,CAAmCvH,EAAasH,gBCClDE,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,SAG1BlB,M","file":"static/js/main.a4d7a131.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZH1Gq\",\"label\":\"ContactForm_label__33AA5\",\"input\":\"ContactForm_input__1hL-s\",\"button\":\"ContactForm_button__3dqN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__1kjUQ\",\"button\":\"ContactItem_button__1KSqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2jId6\",\"input\":\"ContactFilter_input__2rYuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2TmuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ud29\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const phonebookApi = createApi({\r\n  reducerPath: 'contacts',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://616ae79016e7120017fa1131.mockapi.io/contacts',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: `/contacts`,\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = phonebookApi;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nexport function Spinner() {\r\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={38} width={70} />;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { phonebookApi } from 'redux/api';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Notiflix from 'notiflix';\r\nimport css from 'components/ContactForm/ContactForm.module.css';\r\nimport 'components/ContactForm/animation.css';\r\n\r\nimport { Spinner } from 'components/Loader/Loader';\r\n\r\nfunction ContactForm() {\r\n  const { data: contacts = [] } = phonebookApi.useFetchContactsQuery();\r\n  const [addContact] = phonebookApi.useAddContactMutation();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const [loaderIsActive, setLoaderIsActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setName('');\r\n    setNumber('');\r\n  }, [contacts.length]);\r\n\r\n  let id = {\r\n    nameId: uuidv4(),\r\n    numberId: uuidv4(),\r\n  };\r\n\r\n  async function formSubmit(event) {\r\n    event.preventDefault();\r\n    setLoaderIsActive(true);\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      Notiflix.Notify.failure(`${name} is already in contacts`);\r\n      setLoaderIsActive(false);\r\n      return;\r\n    }\r\n    addContact({ name, number }).finally(() => setLoaderIsActive(false));\r\n  }\r\n\r\n  function formChange(event) {\r\n    switch (event.target.name) {\r\n      case 'name':\r\n        return setName(event.target.value);\r\n\r\n      case 'number':\r\n        return setNumber(event.target.value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        timeout={500}\r\n        classNames=\"animation\"\r\n        appear={true}\r\n        in={true}\r\n      >\r\n        <h1>Phonebook</h1>\r\n      </CSSTransition>\r\n      <form onSubmit={formSubmit} className={css.form}>\r\n        <label className={css.label}>\r\n          Name\r\n          <input\r\n            id={id.nameId}\r\n            value={name}\r\n            onChange={formChange}\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={css.input}\r\n          />\r\n        </label>\r\n        <label className={css.label}>\r\n          Number\r\n          <input\r\n            id={id.numberId}\r\n            value={number}\r\n            onChange={formChange}\r\n            placeholder=\"Number\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={css.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={css.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      {loaderIsActive && <Spinner />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nNotiflix.Notify.init({\r\n  timeout: 2500,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'phonebook',\r\n  initialState: { filter: '' },\r\n  reducers: {\r\n    changeFilter(state, actions) {\r\n      state.filter = actions.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const phonebookFilter = filterSlice.reducer;\r\nexport const { changeFilter } = filterSlice.actions;\r\nexport const fetchContacts = state => state.contacts;\r\nexport const getFilter = state => state.phonebookFilter.filter;\r\n","import PropTypes from 'prop-types';\r\nimport { phonebookApi } from 'redux/api';\r\nimport css from 'components/ContactItem/ContactItem.module.css';\r\n\r\nfunction ContactItem({ id, name, number }) {\r\n  const [deleteContact] = phonebookApi.useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={css.contactItem} key={id}>\r\n      <span>{name}: </span>\r\n      <span>{number} </span>\r\n      <span>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}\r\n          id={id}\r\n          className={css.button}\r\n        >\r\n          Delete\r\n        </button>\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from 'components/Notification/Notification.module.css';\r\n\r\nexport function Notification({ message }) {\r\n  return <h2 className={css.message}>{message}</h2>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { phonebookApi } from 'redux/api';\r\nimport { getFilter } from 'redux/reducer';\r\nimport ContactItem from 'components/ContactItem/ContactItem';\r\nimport { Notification } from 'components/Notification/Notification';\r\nimport css from 'components/ContactList/ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const { data: contacts = [] } = phonebookApi.useFetchContactsQuery();\r\n\r\n  const filter = useSelector(getFilter);\r\n\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ul className={css.contactList}>\r\n        {filteredContacts.length === 0 ? (\r\n          <Notification message=\"No contacts here =(\" />\r\n        ) : (\r\n          <div>\r\n            <h2>Contacts:</h2>\r\n            {filteredContacts.map(({ id, name, number }) => (\r\n              <ContactItem key={id} id={id} name={name} number={number} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getFilter, changeFilter } from 'redux/reducer';\r\nimport css from 'components/ContactFilter/ContactFilter.module.css';\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const inputId = uuidv4();\r\n\r\n  return (\r\n    <label className={css.label}>\r\n      Find contact by name\r\n      <input\r\n        id={inputId}\r\n        className={css.input}\r\n        title=\"Введите имя или название контакта\"\r\n        value={filterValue}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n        placeholder=\"Name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactForm />\r\n      <ContactFilter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { phonebookApi } from 'redux/api';\r\nimport { phonebookFilter } from 'redux/reducer';\r\n\r\nconst middleware = getDefaultMiddleware => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return [...getDefaultMiddleware(), phonebookApi.middleware];\r\n  }\r\n  return [...getDefaultMiddleware(), phonebookApi.middleware];\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\r\n    phonebookFilter,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport { store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store.js';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}