{"version":3,"sources":["components/PrivateRoute.jsx","components/PublicRoute.jsx","App.jsx","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/phonebook/phonebook-operations.js","redux/auth/auth-selectors.js","components/Loader/Loader.jsx","redux/phonebook/phonebook-reducer.js","redux/auth/auth-operations.js"],"names":["PrivateRoute","children","redirectTo","routeProps","isLogged","useSelector","authSelectors","to","PublicRoute","restricted","shouldRedirect","LoginView","lazy","RegistrationView","ContactsView","App","tokenExisting","dispatch","useDispatch","isFirstLoadApp","useRef","useEffect","current","authOperations","set","className","fallback","path","authReducer","createSlice","name","initialState","email","token","error","isLoading","extraReducers","builder","addCase","registration","pending","state","fulfilled","action","payload","data","user","rejected","login","logout","getCurrentUser","reducer","persistConfig","key","storage","whitelist","store","configureStore","auth","persistReducer","phonebook","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById","fetchAddContact","createAsyncThunk","newContact","a","rejectWithValue","axios","post","fetchContacts","_","fetchDeleteContact","contactId","delete","getError","getUserName","getUserEmail","getToken","getIsLogged","Spinner","type","color","height","width","phonebookSlice","filter","contacts","reducers","changeFilter","actions","push","contact","id","defaults","baseURL","headers","common","Authorization","unset","newUser","Notiflix","Notify","failure","get"],"mappings":"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","file":"static/js/main.4555d9c9.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport * as authSelectors from 'redux/auth/auth-selectors';\n\nfunction PrivateRoute({ children, redirectTo = '/login', ...routeProps }) {\n  const isLogged = useSelector(authSelectors.getIsLogged);\n\n  return (\n    <Route {...routeProps}>\n      {isLogged ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport * as authSelectors from 'redux/auth/auth-selectors';\n\nfunction PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLogged = useSelector(authSelectors.getIsLogged);\n\n  const shouldRedirect = isLogged && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n\nexport default PublicRoute;\n","import { lazy, Suspense, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Switch } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport * as authOperations from 'redux/auth/auth-operations';\nimport * as authSelectors from 'redux/auth/auth-selectors';\nimport Spinner from 'components/Loader/Loader';\n\nimport './App.css';\n\nconst LoginView = lazy(() => import('views/LoginView/LoginView'));\nconst RegistrationView = lazy(() =>\n  import('views/RegistrationView/RegistrationView'),\n);\nconst ContactsView = lazy(() => import('views/ContactsView/ContactsView'));\n\nconst App = () => {\n  const tokenExisting = useSelector(authSelectors.getToken);\n  const dispatch = useDispatch();\n  const isFirstLoadApp = useRef(true);\n  const isLogged = useSelector(authSelectors.getIsLogged);\n\n  useEffect(() => {\n    if (!isFirstLoadApp.current) return;\n    if (!tokenExisting) return;\n\n    authOperations.token.set(tokenExisting);\n    dispatch(authOperations.getCurrentUser(tokenExisting));\n\n    isFirstLoadApp.current = false;\n  }, [dispatch, tokenExisting]);\n\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <PublicRoute restricted path=\"/login\">\n            <LoginView />\n          </PublicRoute>\n          <PublicRoute restricted path=\"/register\">\n            <RegistrationView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\">\n            <ContactsView />\n          </PrivateRoute>\n          <Redirect to={isLogged ? '/contacts' : '/login'} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { login, logout, getCurrentUser, registration } from './auth-operations';\n\nconst initialState = {\n  name: '',\n  email: '',\n  isLogged: false,\n  token: null,\n  error: null,\n  isLoading: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(registration.pending, state => {\n        state.error = null;\n      })\n      .addCase(registration.fulfilled, (state, action) => {\n        state.name = action.payload.data.user.name;\n        state.email = action.payload.data.user.email;\n        state.token = action.payload.data.token;\n      })\n      .addCase(registration.rejected, (state, action) => {\n        state.error = action.payload;\n        state.name = '';\n        state.email = '';\n        state.token = null;\n        state.isLogged = true;\n      })\n      .addCase(login.pending, state => {\n        state.name = '';\n        state.email = '';\n        state.token = null;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.name = action.payload.data.user.name;\n        state.email = action.payload.data.user.email;\n        state.token = action.payload.data.token;\n        state.isLogged = true;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.error = action.payload;\n        state.name = '';\n        state.email = '';\n        state.token = null;\n      })\n      .addCase(logout.pending, state => {\n        state.error = null;\n      })\n      .addCase(logout.fulfilled, state => {\n        state.name = '';\n        state.email = '';\n        state.token = null;\n        state.isLogged = false;\n      })\n      .addCase(logout.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(getCurrentUser.pending, state => {\n        state.isLoading = true;\n      })\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\n        state.name = action.payload.data.name;\n        state.email = action.payload.data.email;\n        state.isLogged = true;\n        state.isLoading = false;\n      })\n      .addCase(getCurrentUser.rejected, (state, action) => {\n        state.error = action.payload;\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const authReducer = authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport * as phonebookReducer from 'redux/phonebook/phonebook-reducer';\nimport * as authReducer from 'redux/auth/auth-reducer';\n\nconst middleware = getDefaultMiddleware => {\n  return [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          FLUSH,\n          REHYDRATE,\n          PAUSE,\n          PERSIST,\n          PURGE,\n          REGISTER,\n          'auth/registration/fulfilled',\n          'auth/registration/rejected',\n          'auth/login/fulfilled',\n          'auth/login/rejected',\n          'auth/refresh/fulfilled',\n          'auth/refresh/rejected',\n          'auth/getCurrentUser/fulfilled',\n        ],\n      },\n    }),\n  ];\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer.authReducer),\n    phonebook: phonebookReducer.phonebookReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { persistor, store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchAddContact = createAsyncThunk(\n  'fetchAddContact',\n  async (newContact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/contacts', newContact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchContacts = createAsyncThunk(\n  'fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios('/contacts');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchDeleteContact = createAsyncThunk(\n  'fetchDeleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await axios.delete(`/contacts/${contactId}`);\n\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n","export const getError = state => state.auth.error;\nexport const getUserName = state => state.auth.name;\nexport const getUserEmail = state => state.auth.email;\nexport const getToken = state => state.auth.token;\nexport const getIsLogged = state => state.auth.isLogged;\nexport const getIsLoading = state => state.auth.isLoading;\n","import Loader from 'react-loader-spinner';\n\nfunction Spinner() {\n  return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={38} width={70} />;\n}\n\nexport default Spinner;\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchAddContact,\n  fetchContacts,\n  fetchDeleteContact,\n} from './phonebook-operations';\nimport * as authOperations from 'redux/auth/auth-operations';\n\nconst initialState = {\n  filter: '',\n  contacts: [],\n  error: null,\n};\n\nconst phonebookSlice = createSlice({\n  name: 'phonebook',\n  initialState,\n  reducers: {\n    changeFilter(state, actions) {\n      state.filter = actions.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchAddContact.pending, state => {\n        state.error = null;\n      })\n      .addCase(fetchAddContact.fulfilled, (state, action) => {\n        state.contacts.push(action.payload);\n      })\n      .addCase(fetchAddContact.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(fetchContacts.pending, state => {\n        state.error = null;\n      })\n      .addCase(fetchContacts.fulfilled, (state, action) => {\n        state.contacts = action.payload;\n      })\n      .addCase(fetchContacts.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(fetchDeleteContact.pending, state => {\n        state.error = null;\n      })\n      .addCase(fetchDeleteContact.fulfilled, (state, action) => {\n        state.contacts = state.contacts.filter(\n          contact => contact.id !== action.payload,\n        );\n      })\n      .addCase(fetchDeleteContact.rejected, (state, action) => {\n        state.error = action.payload;\n      })\n      .addCase(authOperations.logout.fulfilled, state => {\n        state.contacts = [];\n        state.filter = '';\n        state.error = null;\n      });\n  },\n});\n\nexport const phonebookReducer = phonebookSlice.reducer;\nexport const { changeFilter } = phonebookSlice.actions;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const registration = createAsyncThunk(\n  'auth/registration',\n  async (newUser, { rejectWithValue }) => {\n    try {\n      const data = await axios.post('/users/signup', newUser);\n      token.set(data.data.token);\n      return data;\n    } catch (error) {\n      Notiflix.Notify.failure('Something wrong, try again');\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (user, { rejectWithValue }) => {\n    try {\n      const data = await axios.post('/users/login', user);\n      token.set(data.data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/getCurrentUser',\n  async (user, { rejectWithValue }) => {\n    try {\n      return await axios.get('/users/current', user);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n"],"sourceRoot":""}