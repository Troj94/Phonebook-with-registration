{"version":3,"sources":["components/Header/Header.jsx","components/Header/Header.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"names":["Header","logoutButton","dispatch","useDispatch","userEmail","useSelector","authSelectors","className","css","header","timeout","classNames","appear","in","title","type","onClick","authOperations","module","exports","getContacts","state","phonebook","contacts","getFilter","filter","getError","error","ContactForm","phonebookSelectors","useState","name","setName","number","setNumber","loaderIsActive","setLoaderIsActive","event","a","preventDefault","find","contact","toLowerCase","Notiflix","Notify","failure","phonebookOperations","finally","success","formChange","target","value","useEffect","length","form","autoComplete","onSubmit","label","input","pattern","placeholder","required","onChange","button","ContactFilter","filterValue","setFilterValue","phonebookReducer","ContactItem","id","contactItem","ContactList","filteredContacts","includes","contactList","map","ContactsView"],"mappings":"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","file":"static/js/4.583ccd1f.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport * as authOperations from 'redux/auth/auth-operations';\nimport * as authSelectors from 'redux/auth/auth-selectors';\n\nimport 'components/Header/animation.css';\nimport css from 'components/Header/Header.module.css';\n\nfunction Header({ logoutButton = false }) {\n  const dispatch = useDispatch();\n  const userEmail = useSelector(authSelectors.getUserEmail);\n\n  const handleLogoutButton = () => {\n    dispatch(authOperations.logout());\n  };\n\n  return (\n    <header className={css.header}>\n      <CSSTransition\n        timeout={500}\n        classNames=\"animation\"\n        appear={true}\n        in={true}\n      >\n        <h1 className={css.title}>Phonebook</h1>\n      </CSSTransition>\n      {logoutButton && (\n        <div>\n          <h3 className={css.title}>Hello, {userEmail}</h3>\n          <button type=\"button\" onClick={handleLogoutButton}>\n            Log out\n          </button>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__eB9sG\",\"title\":\"Header_title__15_1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2jId6\",\"input\":\"ContactFilter_input__2rYuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZH1Gq\",\"label\":\"ContactForm_label__33AA5\",\"input\":\"ContactForm_input__1hL-s\",\"button\":\"ContactForm_button__3dqN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__1kjUQ\",\"button\":\"ContactItem_button__1KSqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ud29\"};","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getError = state => state.phonebook.error;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as phonebookSelectors from 'redux/phonebook/phonebook-selectors';\nimport * as phonebookOperations from 'redux/phonebook/phonebook-operations';\nimport Spinner from 'components/Loader/Loader';\n\nimport Notiflix from 'notiflix';\nimport css from 'components/ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.getContacts);\n  const error = useSelector(phonebookSelectors.getError);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [loaderIsActive, setLoaderIsActive] = useState(false);\n\n  useEffect(() => {\n    setName('');\n    setNumber('');\n  }, [contacts.length]);\n\n  async function formSubmit(event) {\n    setLoaderIsActive(true);\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n      setLoaderIsActive(false);\n      return;\n    }\n    dispatch(phonebookOperations.fetchAddContact({ name, number })).finally(\n      () => Notiflix.Notify.success('The contacts is added'),\n      setLoaderIsActive(false),\n    );\n  }\n\n  function formChange(event) {\n    switch (event.target.name) {\n      case 'name':\n        return setName(event.target.value);\n      case 'number':\n        return setNumber(event.target.value);\n      default:\n        return;\n    }\n  }\n\n  useEffect(() => {\n    if (error) {\n      Notiflix.Notify.failure('Something gone wrong, try again');\n      return;\n    }\n  }, [contacts, error]);\n\n  return (\n    <form className={css.form} autoComplete={'on'} onSubmit={formSubmit}>\n      <label className={css.label}>\n        Name:\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Name\"\n          required={true}\n          value={name}\n          onChange={formChange}\n        />\n      </label>\n      <label className={css.label}>\n        Number:\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Number\"\n          required={true}\n          value={number}\n          onChange={formChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n      {loaderIsActive && <Spinner />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as phonebookReducer from 'redux/phonebook/phonebook-reducer';\n\nimport css from 'components/ContactFilter/ContactFilter.module.css';\n\nfunction ContactFilter() {\n  const dispatch = useDispatch();\n  const [filterValue, setFilterValue] = useState('');\n\n  useEffect(() => {\n    dispatch(phonebookReducer.changeFilter(filterValue));\n  }, [dispatch, filterValue]);\n\n  return (\n    <label className={css.label}>\n      Find contacts by name:\n      <input\n        className={css.input}\n        title=\"Start to write name of contact to find\"\n        type=\"text\"\n        placeholder=\"Name\"\n        value={filterValue}\n        onChange={event => setFilterValue(event.target.value)}\n      />\n    </label>\n  );\n}\n\nexport default ContactFilter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as phonebookOperations from 'redux/phonebook/phonebook-operations';\n\nimport css from 'components/ContactItem/ContactItem.module.css';\n\nfunction ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contactItem} key={id}>\n      <span>{name}: </span>\n      <span>{number} </span>\n      <span>\n        <button\n          className={css.button}\n          id={id}\n          type=\"button\"\n          onClick={() => dispatch(phonebookOperations.fetchDeleteContact(id))}\n        >\n          Delete\n        </button>\n      </span>\n    </li>\n  );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as phonebookSelectors from 'redux/phonebook/phonebook-selectors';\nimport * as phonebookOperations from 'redux/phonebook/phonebook-operations';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nimport css from 'components/ContactList/ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.getContacts);\n  const filter = useSelector(phonebookSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(phonebookOperations.fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {contacts.length === 0 && <h4>No contacts here.</h4>}\n      {contacts.length > 0 && filteredContacts.length === 0 && (\n        <h4>Sorry, there are no contacts with this name.</h4>\n      )}\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Header from 'components/Header/Header';\n\nfunction ContactsView() {\n  return (\n    <>\n      <Header logoutButton />\n      <ContactForm />\n      <h2>Your contacts:</h2>\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n}\n\nexport default ContactsView;\n"],"sourceRoot":""}